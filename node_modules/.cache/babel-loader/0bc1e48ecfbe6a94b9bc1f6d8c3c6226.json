{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\flochristos\\\\Documents\\\\React\\\\reactcal\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'; // import App from './App';\n\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App22 extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.calculate = () => {\n      try {\n        const result = eval(this.state.data);\n        this.setState({\n          data: result\n        });\n      } catch (e) {\n        this.setState({\n          data: 'error'\n        });\n      }\n    };\n\n    this.handleClick = e => {\n      const value = e.target.getAttribute('data-value');\n\n      switch (value) {\n        case 'clear':\n          this.setState({\n            data: ''\n          });\n          break;\n\n        case 'equal':\n          this.calculate();\n          break;\n\n        default:\n          this.setState({\n            data: this.state.data + value\n          });\n      }\n    };\n\n    this.state = {\n      isToggleOn: true\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App22, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 43,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["C:/Users/flochristos/Documents/React/reactcal/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","App22","Component","constructor","props","calculate","result","eval","state","data","setState","e","handleClick","value","target","getAttribute","isToggleOn","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,aAAP,C,CACA;;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AACA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAmC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAInBC,SAJmB,GAIP,MAAM;AAChB,UAAI;AACA,cAAMC,MAAM,GAAGC,IAAI,CAAC,KAAKC,KAAL,CAAWC,IAAZ,CAAnB;AACA,aAAKC,QAAL,CAAc;AAACD,UAAAA,IAAI,EAAEH;AAAP,SAAd;AACH,OAHD,CAGE,OAAOK,CAAP,EAAU;AACR,aAAKD,QAAL,CAAc;AAACD,UAAAA,IAAI,EAAE;AAAP,SAAd;AACH;AACJ,KAXoB;;AAAA,SAarBG,WAbqB,GAaPD,CAAC,IAAI;AACf,YAAME,KAAK,GAAGF,CAAC,CAACG,MAAF,CAASC,YAAT,CAAsB,YAAtB,CAAd;;AACA,cAAOF,KAAP;AACI,aAAK,OAAL;AACI,eAAKH,QAAL,CAAc;AAAED,YAAAA,IAAI,EAAE;AAAR,WAAd;AACA;;AACJ,aAAK,OAAL;AACI,eAAKJ,SAAL;AACA;;AACJ;AACI,eAAKK,QAAL,CAAc;AAAED,YAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IAAX,GAAkBI;AAA1B,WAAd;AARR;AAUH,KAzBoB;;AAEjB,SAAKL,KAAL,GAAa;AAACQ,MAAAA,UAAU,EAAE;AAAb,KAAb;AACD;;AAwBDC,EAAAA,MAAM,GAAE;AACJ,wBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAhC8B;;AAmCnCnB,QAAQ,CAACmB,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAOA;AACA;AACA;;AACAnB,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n// import App from './App';\nimport reportWebVitals from './reportWebVitals';\nclass App22 extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {isToggleOn: true};\n  }\n  calculate = () => {\n    try {\n        const result = eval(this.state.data);\n        this.setState({data: result});\n    } catch (e) {\n        this.setState({data: 'error'})\n    }\n}\n\nhandleClick = e => {\n    const value = e.target.getAttribute('data-value');\n    switch(value) {\n        case 'clear':\n            this.setState({ data: ''});\n            break;\n        case 'equal':\n            this.calculate();\n            break;\n        default:\n            this.setState({ data: this.state.data + value});\n    }\n}\n\n  render(){\n      return (\n        <App/>\n      );\n    }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App22 />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}